name: Build and Push Docker Images

on:
  workflow_dispatch:

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout MHub code
        uses: actions/checkout@v4
        with:
          repository: MHubAI/models
          path: mhub

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Get list of models from MHub API and prepare matrix
        id: set-matrix
        run: |
          python -c "
          import requests
          import json
          response = requests.get('https://mhub.ai/api/v2/models')
          models = response.json()['data']['models']
          matrix = [{'model': model} for model in models]
          print('matrix=' + json.dumps({'include': matrix}))" >> $GITHUB_OUTPUT

  build_base_image:
    needs: setup-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout MHub code
        uses: actions/checkout@v4
        with:
          repository: MHubAI/models
          path: mhub

      - name: Get MHub's latest git hash
        id: get-hash
        run: |
          MHUB_SHA=$(curl --silent "https://api.github.com/repos/MHubAI/models/commits/main" | jq -r .sha)
          echo "MHUB_SHA=$MHUB_SHA" >> $GITHUB_ENV

      - name: Modify Dockerfile base image
        run: |
          sed -i '1s/ubuntu:20.04/nvidia\/cuda:11.2.5.0-base-ubuntu20.04/' ./mhub/base/dockerfiles/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Build and push base image
        uses: docker/build-push-action@v6
        with:
          context: ./mhub
          file: ./mhub/base/dockerfiles/Dockerfile
          push: true
          tags: imagingdatacommons/mhubai_base:${{ env.MHUB_SHA }},imagingdatacommons/mhubai_base:latest

  build_model_images:
    needs: [setup-matrix, build_base_image]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - name: Checkout MHub code
        uses: actions/checkout@v4
        with:
          repository: MHubAI/models
          path: mhub

      - name: Modify Dockerfile base image
        run: |
          sed -i '1s/mhubai\/base:latest/imagingdatacommons\/mhubai_base:${{ env.MHUB_SHA }}/' ./mhub/models/${{ matrix.model }}/dockerfiles/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Build and push model image
        uses: docker/build-push-action@v6
        with:
          context: ./mhub
          file: ./mhub/models/${{ matrix.model }}/dockerfiles/Dockerfile
          push: true
          tags: imagingdatacommons/${{ matrix.model }}:${{ env.MHUB_SHA }},imagingdatacommons/${{ matrix.model }}:latest
